{"version":3,"sources":["components/AboutComp.js","pages/about.js","components/Nav.js","pages/portfolio.js","components/ContactButtons.js","pages/contact.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["AboutComp","className","id","About","Nav","to","type","data-toggle","data-target","Portfolio","ContactButtons","href","target","rel","Contact","Footer","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0XA4CeA,G,MAzCG,WAChB,OACE,6BAASC,UAAU,mCACjB,yBAAKA,UAAU,UACb,yBAAKA,UAAU,kCAEf,yBAAKA,UAAU,mCACb,wBAAIC,GAAG,aAAP,yBAC4B,wBAAIA,GAAG,cAAP,iDAE5B,q6BAgBA,gPAIa,2CAJb,8NCjBKC,EARD,WACV,OACI,6BACR,kBAAC,EAAD,QCgCeC,EApCH,WACV,OACE,6BACE,yBAAKH,UAAU,wCACb,kBAAC,IAAD,CAAMI,GAAG,IAAIJ,UAAU,gBAAvB,UAIA,4BACEA,UAAU,iBACVK,KAAK,SACLC,cAAY,WACZC,cAAY,sBAEZ,0BAAMP,UAAU,yBAGlB,yBAAKA,UAAU,2BAA2BC,GAAG,qBAC3C,wBAAID,UAAU,cACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWI,GAAG,cAA9B,cAIF,wBAAIJ,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWI,GAAG,YAA9B,iB,iBChBCI,EARG,WACd,OACI,6BACR,kBAAC,IAAD,QCwDeC,G,MA5DQ,WACrB,OACE,6BACE,yBAAKT,UAAU,mBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,wBAAIC,GAAG,eAAP,YAGF,yBAAKD,UAAU,eACb,uBACEU,KAAK,mCACLV,UAAU,wBAFZ,WAOF,6BACA,yBAAKA,UAAU,eACb,uBACEU,KAAK,+CACLV,UAAU,wBAFZ,aAOF,6BACA,yBAAKA,UAAU,eACb,uBACEU,KAAK,mCACLV,UAAU,wBAFZ,UAOF,6BACA,yBAAKA,UAAU,eACb,uBAAGU,KAAK,mBAAmBV,UAAU,wBAArC,wBAIF,6BAEA,yBAAKA,UAAU,eACb,uBACEU,KAAK,MACLC,OAAQ,SACRC,IAAI,sBACJZ,UAAU,wBAJZ,WASF,kCC5CKa,EARC,WACZ,OACI,6BACR,kBAAC,EAAD,QCKeC,G,MATA,WACb,OACE,6BACE,yBAAKd,UAAU,+BAA+BC,GAAG,c,MC+BxCc,MAtBf,WAEE,OACE,6BACE,kBAAC,IAAD,CAAQC,SAAS,MACjB,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,yBAAKhB,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,IAAIC,UAAWjB,IACjC,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,aAAaC,UAAWX,IAC1C,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,WAAWC,UAAWN,MAG5C,kBAAC,EAAD,UClBUO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.230f0471.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles/About.css\"\n\nconst AboutComp = () => {\n  return (\n    <article className=\"row single-post mt-5 no-gutters\">\n      <div className=\"col-12\">\n        <div className=\"image-wrapper float-left pr-3\">\n        </div>\n        <div className=\"single-post-content-wrapper p-3\">\n          <h1 id=\"introtext\">\n            Hi, my name is Dwight</h1><h1 id=\"introtext2\">I am a Full-Stack Developer from Atlanta, GA.\n          </h1>\n          <p>\n          Hello World! My name is Dwight Huggins and I am originally from\n              small town Bartow, GA. I moved to the Atlanta area back in 2008 \n              and it's been home since. I hold a Bachelor's of Interdisplinary \n              Studies from Georgia Southern Univeristy with concentrations in\n              Business Management, Public Policy, and Public Administration. \n              For the last five years I have been an employee of Apple, Inc.\n              I have held numerous roles there over the course of my career from \n              customer facing/business sales to technical support. For the last year \n              I have held the title of \"Genius\" where I focused on hardware and software \n              support for all Apple machines and devices. However, I have been wanting to \n              enter the software industry and I was able to recently enroll with GA Tech's \n              Full Stack Web Development Program. Post graduation I will be seeking software \n              development roles far and wide. I'm super excited to be on this journey!\n          </p>\n\n          <p>\n            I have always had a love for problem solving, analyzing data, and\n            creating projects. I never found the perfect way to implement those\n            skills and interests in a career. After months of research, soul\n            searching, <i>and Googling</i>, I discovered coding bootcamps. I\n            utilized CodeAcademy for a while to see if I would enjoy coding, and\n            I became obsessed. I am looking forward to building my coding skill\n            set, and finding a career as a developer.\n          </p>\n        </div>\n      </div>\n    </article>\n  );\n};\n\nexport default AboutComp;","import React from 'react';\nimport AboutComp from '../components/AboutComp';\n\n\nconst About = () => {\n    return (\n        <div>\n<AboutComp></AboutComp>\n        </div>\n    );\n};\n\nexport default About;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav = () => {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-md navbar-light\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          Dwight\n        </Link>\n\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#collapsibleNavbar\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/portfolio\">\n                Portfolio\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/contact\">\n                Contact\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Nav;","import React from 'react';\nimport CardContainer from '../components/CardContainer';\n\n\nconst Portfolio = () => {\n    return (\n        <div>\n<CardContainer></CardContainer>\n        </div>\n    );\n};\n\nexport default Portfolio;\n","import React from \"react\";\nimport \"./styles/Contact.css\";\n\nconst ContactButtons = () => {\n  return (\n    <div>\n      <div className=\"container-fluid\">\n        <div className=\"col-12 col-md-6\">\n          <div className=\"row\">\n            <h1 id=\"contacttext\">Contact</h1>\n          </div>\n\n          <div className=\"row contact\">\n            <a\n              href=\"https://github.com/dwighthuggins\"\n              className=\"btn btn-outline-dark\"\n            >\n              GitHub\n            </a>\n          </div>\n          <br></br>\n          <div className=\"row contact\">\n            <a\n              href=\"www.linkedin.com/in/dwight-huggins-76aa51122\"\n              className=\"btn btn-outline-dark\"\n            >\n              LinkedIn\n            </a>\n          </div>\n          <br></br>\n          <div className=\"row contact\">\n            <a\n              href=\"mailto:dwight_huggins@icloud.com\"\n              className=\"btn btn-outline-dark\"\n            >\n              Email\n            </a>\n          </div>\n          <br></br>\n          <div className=\"row contact\">\n            <a href=\"tel:404-290-9168\" className=\"btn btn-outline-dark\">\n              Phone: 404-290-9168\n            </a>\n          </div>\n          <br></br>\n\n          <div className=\"row contact\">\n            <a\n              href=\"Pdf\"\n              target= \"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"btn btn-outline-dark\"\n            >\n              Resume\n            </a>\n          </div>\n          <br></br>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactButtons;","import React from 'react';\nimport ContactButtons from '../components/ContactButtons';\n\n\nconst Contact = () => {\n    return (\n        <div>\n<ContactButtons></ContactButtons>\n        </div>\n    );\n};\n\nexport default Contact;","import React from \"react\";\nimport \"./styles/Footer.css\"\n\nconst Footer = () => {\n  return (\n    <div>\n      <nav className=\"navbar navbar-light bg-light\" id=\"footer\">\n      </nav>\n    </div>\n  );\n};\n\nexport default Footer;","import React from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n// import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./pages/about\";\nimport Nav from \"./components/Nav\";\nimport Portfolio from \"./pages/portfolio\";\nimport Contact from \"./pages/contact\";\nimport Footer from \"./components/Footer\";\nimport \"./components/styles/Style.css\";\n// import AboutComp from \"./components/AboutComp\";\n// import CardContainer from \"./components/CardContainer\";\n// import ContactButtons from \"./components/ContactButtons\";\n\nfunction App() {\n\n  return (\n    <div>\n      <Router basename=\"/\"></Router> \n      <Router>\n        <Nav/>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <Route exact path=\"/\" component={About}></Route>\n              <Route exact path=\"/portfolio\" component={Portfolio}></Route>\n              <Route exact path=\"/contact\" component={Contact}></Route> \n            </div>\n          </div>\n          <Footer/>\n        </div>\n      </Router> \n      </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}